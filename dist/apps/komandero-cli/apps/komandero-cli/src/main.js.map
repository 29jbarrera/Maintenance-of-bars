{
  "version": 3,
  "sources": ["../../../../../../apps/komandero-cli/src/main.ts"],
  "sourcesContent": ["import { writeFileSync } from 'fs';\nimport { prisma } from './prisma';\nimport { product_category, product, product_size } from '@prisma/client';\n\nasync function main() {\n  const old_organization_id = 'fa7accf2-b195-4a35-bc53-e71dcb154df2';\n  const organization_id = 'b4a6384e-cdc5-4223-9d86-937df1c2dc96';\n\n  const organization_created = await prisma.organization.upsert({\n    create: {\n      id: organization_id,\n      name: 'Hoteles Garbell',\n      billing_address: 'San Sebasti\u00E1n 17',\n      billing_name: 'Hoteles Garbell SL',\n      billing_identifier: 'B91842385',\n      letterhead: [\n        {\n          style: 'B',\n          text: 'Hoteles Garbell',\n          size_x: 3,\n          align: 'ct',\n          size_y: 2,\n          font: 'B',\n        },\n        {\n          style: 'NORMAL',\n          text: '',\n          size_x: 1,\n          align: 'ct',\n          size_y: 1,\n          font: 'a',\n        },\n        {\n          style: 'NORMAL',\n          text: '',\n          size_x: 1,\n          align: 'ct',\n          size_y: 1,\n          font: 'a',\n        },\n        {\n          style: 'NORMAL',\n          text: 'B91842385',\n          size_x: 1,\n          align: 'ct',\n          size_y: 1,\n          font: 'a',\n        },\n        {\n          style: 'NORMAL',\n          text: 'San Sebasti\u00E1n, 17, Marchena 41620',\n          size_x: 1,\n          align: 'ct',\n          size_y: 1,\n          font: 'a',\n        },\n        {\n          style: 'NORMAL',\n          text: '',\n          size_x: 1,\n          align: 'ct',\n          size_y: 1,\n          font: 'a',\n        },\n      ],\n    },\n    update: {},\n    where: {\n      id: organization_id,\n    },\n  });\n\n  // Add user to organization\n  const user = await prisma.user.findFirstOrThrow({\n    where: {\n      email: 'damian@kissandcode.com',\n    },\n  });\n  await prisma.user_has_access_to_organization.upsert({\n    create: {\n      o_id: organization_id,\n      u_id: user.id,\n    },\n    update: {},\n    where: {\n      u_id_o_id: {\n        o_id: organization_id,\n        u_id: user.id,\n      },\n    },\n  });\n\n  const role = 'user_manager';\n  await prisma.user_has_role_in_organization.upsert({\n    create: {\n      o_id: organization_id,\n      u_id: user.id,\n      role,\n    },\n    update: {},\n    where: {\n      u_id_o_id_role: {\n        u_id: user.id,\n        o_id: organization_id,\n        role,\n      },\n    },\n  });\n\n  console.log('Organization created');\n\n  let total = 0;\n  // Copy Categories\n  console.log('Copying categories');\n  const product_categories = await prisma.product_category.findMany({\n    where: { organization_id: old_organization_id },\n  });\n  const category_obj: { [key: string]: string } = {};\n  for (const product_category of product_categories) {\n    const obj = {\n      ...product_category,\n      organization_id,\n    };\n    delete obj.id;\n    const product_category_created = await prisma.product_category.create({\n      data: obj,\n    });\n    category_obj[product_category.id] = product_category_created.id;\n  }\n  total = Object.keys(category_obj).length;\n\n  console.log(`Categories copied: ${total}/${product_categories.length}`);\n  total = 0;\n\n  // Copy prices\n  console.log('Copying prices');\n  const product_sizes = await prisma.product_size.findMany({\n    where: { organization_id: old_organization_id },\n  });\n  const product_sizes_obj: { [key: string]: string } = {};\n  for (const product_size of product_sizes) {\n    const obj = {\n      ...product_size,\n      organization_id,\n    };\n    delete obj.id;\n    const product_size_created = await prisma.product_size.create({\n      data: obj,\n    });\n    product_sizes_obj[product_size.id] = product_size_created.id;\n  }\n  total = Object.keys(product_sizes_obj).length;\n  console.log(`Prices copied: ${total}/${product_sizes.length}`);\n  total = 0;\n\n  // Copy Products\n  console.log('Copying products');\n  const products = await prisma.product.findMany({\n    where: {\n      organization_id: old_organization_id,\n    },\n  });\n  for (const product of products) {\n    const product_category_id = category_obj[product.product_category_id];\n    const _product_size_price = await prisma.product_size_price.findMany({\n      where: {\n        product_id: product.id,\n      },\n    });\n    const obj = {\n      ...product,\n      organization_id,\n      product_category_id,\n      product_size_price: {\n        createMany: {\n          data: _product_size_price.map((p) => {\n            const product_size_id = product_sizes_obj[p.product_size_id];\n            return {\n              product_size_id,\n              organization_id,\n              order: p.order,\n              price: p.price,\n              qr_o: p.qr_o,\n              qr_v: p.qr_v,\n              w_v: p.w_v,\n            };\n          }),\n        },\n      },\n    };\n\n    delete obj.id;\n    await prisma.product.create({\n      data: obj,\n    });\n  }\n\n  console.log(`Products copied: ${products.length}`);\n\n  // Add users to organization\n}\n\n// main().then().catch(console.error);\n"],
  "mappings": "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",
  "names": ["product_category", "product_size", "product"]
}
