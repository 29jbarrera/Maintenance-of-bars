{
  "version": 3,
  "sources": ["../../../../../../../../../../libs/server/src/lib/trpc/organizations/oidokocina/integration.ts"],
  "sourcesContent": ["import {\n  OK_PEDIDOS,\n  OK_TYPE_OF_ORIGIN,\n  OK_PEDIDO_BODY,\n  OK_PEDIDO_UNO,\n} from '@komandero/commons';\n\nexport async function obtener_pedidos(\n  body: OK_PEDIDO_BODY\n): Promise<OK_PEDIDOS> {\n  const myHeaders = new Headers();\n  myHeaders.append(\n    'Authorization',\n    'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjQwNjEzLCJyb2xlIjp7ImJpdE1hc2siOjQsInRpdGxlIjoiYWRtaW4iLCJub21icmUiOiJBZG1pbmlzdHJhZG9yIn0sImlhdCI6MTcyMjIzNjUzOX0.mUl0VxHsbFid0Osd7ZfRM-7Ejb5dnVTt4jRr6aaziVA 288'\n  );\n\n  const _body = {\n    idEstablecimiento: 288,\n    opcion: 2,\n    ...body,\n    mriders: false,\n  };\n\n  const raw = JSON.stringify(_body);\n\n  const requestOptions: any = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n  };\n\n  return fetch(\n    'https://apibar.okbackend.com/api/pedido/buscarPedidos',\n    requestOptions\n  ).then((response) => response.json());\n}\n\nexport async function obtener_un_pedido(id: string): Promise<OK_PEDIDO_UNO> {\n  const myHeaders = new Headers();\n  myHeaders.append(\n    'Authorization',\n    'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjQwNjEzLCJyb2xlIjp7ImJpdE1hc2siOjQsInRpdGxlIjoiYWRtaW4iLCJub21icmUiOiJBZG1pbmlzdHJhZG9yIn0sImlhdCI6MTcyMjIzNjUzOX0.mUl0VxHsbFid0Osd7ZfRM-7Ejb5dnVTt4jRr6aaziVA 288'\n  );\n\n  const requestOptions: any = {\n    method: 'GET',\n    headers: myHeaders,\n    redirect: 'follow',\n  };\n\n  return fetch(\n    `https://apibar.okbackend.com/api/pedido/findOne?id=${id}&pdto=1`,\n    requestOptions\n  ).then((response) => response.json());\n}\n\nexport async function get_token(body: OK_LOGIN_BODY): Promise<OK_LOGIN> {\n  const myHeaders = new Headers();\n  const raw = JSON.stringify(body);\n\n  const requestOptions: any = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n  };\n\n  return fetch('https://apibar.okbackend.com/auth/local', requestOptions).then(\n    (response) => response.json()\n  );\n}\n\nexport type OK_LOGIN_BODY = {\n  identifier: string;\n  password: string;\n  rememberme: boolean;\n};\n\nexport type OK_LOGIN = {\n  id: number;\n  username: string;\n  role: Role;\n  token: string;\n  pp: string;\n  tlocal: number;\n  est: number;\n  nombreEst: string;\n  mduEst: boolean;\n  permisos: any[];\n};\n\nexport type Role = {\n  bitMask: number;\n  title: string;\n  nombre: string;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,eAAsB,gBACpB,MACqB;AACrB,QAAM,YAAY,IAAI,QAAQ;AAC9B,YAAU;AAAA,IACR;AAAA,IACA;AAAA,EACF;AAEA,QAAM,QAAQ;AAAA,IACZ,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,SAAS;AAAA,EACX;AAEA,QAAM,MAAM,KAAK,UAAU,KAAK;AAEhC,QAAM,iBAAsB;AAAA,IAC1B,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF,EAAE,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC;AACtC;AAEA,eAAsB,kBAAkB,IAAoC;AAC1E,QAAM,YAAY,IAAI,QAAQ;AAC9B,YAAU;AAAA,IACR;AAAA,IACA;AAAA,EACF;AAEA,QAAM,iBAAsB;AAAA,IAC1B,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,EACZ;AAEA,SAAO;AAAA,IACL,sDAAsD,EAAE;AAAA,IACxD;AAAA,EACF,EAAE,KAAK,CAAC,aAAa,SAAS,KAAK,CAAC;AACtC;AAEA,eAAsB,UAAU,MAAwC;AACtE,QAAM,YAAY,IAAI,QAAQ;AAC9B,QAAM,MAAM,KAAK,UAAU,IAAI;AAE/B,QAAM,iBAAsB;AAAA,IAC1B,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAEA,SAAO,MAAM,2CAA2C,cAAc,EAAE;AAAA,IACtE,CAAC,aAAa,SAAS,KAAK;AAAA,EAC9B;AACF;",
  "names": []
}
