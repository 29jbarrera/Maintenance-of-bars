{
  "version": 3,
  "sources": ["../../../../../../../../../../libs/server/src/lib/trpc/organizations/organization_commander/index.ts"],
  "sourcesContent": ["import { TRPCError } from '@trpc/server';\nimport {\n  getUserIdFormContext,\n  publicProcedure,\n  router,\n} from '@komandero/serverTRPC';\nimport * as z from 'zod';\nimport { prisma } from '@komandero/prisma';\n\nexport const organization_commander = router({\n  get_all: publicProcedure\n    .input(\n      z.object({\n        o_id: z.string().uuid(),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      const { o_id } = input;\n\n      const organizations_commanders =\n        await prisma.organization_commander.findMany({\n          where: {\n            o_id,\n          },\n        });\n\n      return organizations_commanders;\n    }),\n  get_categories_and_products: publicProcedure\n    .input(\n      z.object({\n        organization_id: z.string().uuid(),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      const { organization_id } = input;\n\n      const categories_and_products = await prisma.product_category.findMany({\n        where: { organization_id },\n        orderBy: {\n          qr_o: 'asc',\n        },\n        include: {\n          product: true,\n        },\n      });\n\n      return { categories_and_products };\n    }),\n  update: publicProcedure\n    .input(\n      z.object({\n        id: z.string().uuid(),\n        form: z.object({\n          name: z.string(),\n          order: z.number(),\n          print_available: z.boolean(),\n          print_name: z.string(),\n          status_selected: z.array(z.string()),\n          max_time: z.number(),\n          name_internals: z.boolean(),\n          notifications: z.boolean(),\n        }),\n        product_categories_blocked: z.array(z.string()),\n        product_ids_blocked: z.array(z.string()),\n        product_ids_allowed: z.array(z.string()),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      const {\n        form,\n        id,\n        product_categories_blocked,\n        product_ids_blocked,\n        product_ids_allowed,\n      } = input;\n\n      const {\n        name,\n        order,\n        print_available,\n        print_name,\n        status_selected,\n        max_time,\n        name_internals,\n        notifications,\n      } = form;\n\n      const organization_commander =\n        await prisma.organization_commander.findFirstOrThrow({\n          where: { id },\n        });\n\n      const update = await prisma.organization_commander.update({\n        where: {\n          id,\n        },\n        data: {\n          name,\n          order,\n          print_available,\n          print_name,\n          conf: {\n            ...(organization_commander.conf as any),\n            status_selected,\n            product_categories_blocked,\n            product_ids_blocked,\n            product_ids_allowed,\n            max_time,\n            name_internals,\n            notifications\n          },\n        },\n      });\n\n      return update;\n    }),\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAIO;AACP,QAAmB;AACnB,oBAAuB;AAEhB,MAAM,6BAAyB,0BAAO;AAAA,EAC3C,SAAS,kCACN;AAAA,IACC,EAAE,OAAO;AAAA,MACP,MAAM,EAAE,OAAO,EAAE,KAAK;AAAA,IACxB,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,UAAM,EAAE,KAAK,IAAI;AAEjB,UAAM,2BACJ,MAAM,qBAAO,uBAAuB,SAAS;AAAA,MAC3C,OAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF,CAAC;AAEH,WAAO;AAAA,EACT,CAAC;AAAA,EACH,6BAA6B,kCAC1B;AAAA,IACC,EAAE,OAAO;AAAA,MACP,iBAAiB,EAAE,OAAO,EAAE,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,UAAM,EAAE,gBAAgB,IAAI;AAE5B,UAAM,0BAA0B,MAAM,qBAAO,iBAAiB,SAAS;AAAA,MACrE,OAAO,EAAE,gBAAgB;AAAA,MACzB,SAAS;AAAA,QACP,MAAM;AAAA,MACR;AAAA,MACA,SAAS;AAAA,QACP,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,WAAO,EAAE,wBAAwB;AAAA,EACnC,CAAC;AAAA,EACH,QAAQ,kCACL;AAAA,IACC,EAAE,OAAO;AAAA,MACP,IAAI,EAAE,OAAO,EAAE,KAAK;AAAA,MACpB,MAAM,EAAE,OAAO;AAAA,QACb,MAAM,EAAE,OAAO;AAAA,QACf,OAAO,EAAE,OAAO;AAAA,QAChB,iBAAiB,EAAE,QAAQ;AAAA,QAC3B,YAAY,EAAE,OAAO;AAAA,QACrB,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,QACnC,UAAU,EAAE,OAAO;AAAA,QACnB,gBAAgB,EAAE,QAAQ;AAAA,QAC1B,eAAe,EAAE,QAAQ;AAAA,MAC3B,CAAC;AAAA,MACD,4BAA4B,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,MAC9C,qBAAqB,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,MACvC,qBAAqB,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,IACzC,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAMA,0BACJ,MAAM,qBAAO,uBAAuB,iBAAiB;AAAA,MACnD,OAAO,EAAE,GAAG;AAAA,IACd,CAAC;AAEH,UAAM,SAAS,MAAM,qBAAO,uBAAuB,OAAO;AAAA,MACxD,OAAO;AAAA,QACL;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM;AAAA,UACJ,GAAIA,wBAAuB;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT,CAAC;AACL,CAAC;",
  "names": ["organization_commander"]
}
