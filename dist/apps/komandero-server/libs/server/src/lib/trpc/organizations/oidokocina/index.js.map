{
  "version": 3,
  "sources": ["../../../../../../../../../../libs/server/src/lib/trpc/organizations/oidokocina/index.ts"],
  "sourcesContent": ["import { TRPCError } from '@trpc/server';\nimport {\n  getUserIdFormContext,\n  publicProcedure,\n  router,\n} from '@komandero/serverTRPC';\nimport * as z from 'zod';\nimport { prisma } from '@komandero/prisma';\n\nexport const oidokocina = router({\n  get_my_config: publicProcedure\n    .input(\n      z.object({\n        organization_id: z.string().uuid(),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      let config = await prisma.oidokocina_configuration.findFirst({\n        where: {\n          o_id: input.organization_id,\n        },\n      });\n\n      if (!config) {\n        config = await prisma.oidokocina_configuration.create({\n          data: {\n            o_id: input.organization_id,\n            a: 0,\n            p: '',\n            version: '1',\n            modeloImpresora: 1,\n            numconfig: 1,\n          },\n        });\n      }\n\n      return config;\n    }),\n  save_my_config: publicProcedure\n    .input(\n      z.object({\n        id: z.string().uuid(),\n        organization_id: z.string().uuid(),\n        a: z.number(),\n        p: z.string(),\n        version: z.string(),\n        modeloImpresora: z.number(),\n        numconfig: z.number(),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      const config = await prisma.oidokocina_configuration.update({\n        where: {\n          id: input.id,\n        },\n        data: {\n          a: input.a,\n          p: input.p,\n          version: input.version,\n          modeloImpresora: input.modeloImpresora,\n          numconfig: input.numconfig,\n        },\n      });\n\n      return config;\n    }),\n  get_pedidos: publicProcedure\n    .input(\n      z.object({\n        fechaini: z.string(),\n        fechafin: z.string(),\n        estado: z.array(z.number()),\n        formaPago: z.number(),\n        formaEntrega: z.number(),\n        // Origin is enum\n        origen: z.string(),\n        // .refine((val) => OK_ORIGIN_ARRAY.includes(val as OK_TYPE_OF_ORIGIN), {\n        //   message: `El valor debe ser uno de los siguientes: ${OK_ORIGIN_ARRAY.join(\n        //     ', '\n        //   )}`,\n        // }),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      const origen = input.origen as OK_TYPE_OF_ORIGIN;\n      return obtener_pedidos({\n        estado: input.estado,\n        fechaini: input.fechaini,\n        fechafin: input.fechafin,\n        formaPago: input.formaPago,\n        formaEntrega: input.formaEntrega,\n        origen,\n      });\n    }),\n  get_un_pedido: publicProcedure\n    .input(\n      z.object({\n        // ID del pedido\n        id: z.string(),\n        organization_id: z.string().uuid(),\n      })\n    )\n    .mutation(async ({ ctx, input }) => {\n      return obtener_un_pedido(input.id);\n    }),\n});\nimport './integration';\nimport { obtener_pedidos, obtener_un_pedido } from './integration';\nimport { OK_ORIGIN_ARRAY, OK_TYPE_OF_ORIGIN } from '@komandero/commons';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,wBAIO;AACP,QAAmB;AACnB,oBAAuB;AAmGvB,yBAAO;AACP,IAAAA,sBAAmD;AAlG5C,MAAM,iBAAa,0BAAO;AAAA,EAC/B,eAAe,kCACZ;AAAA,IACC,EAAE,OAAO;AAAA,MACP,iBAAiB,EAAE,OAAO,EAAE,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,QAAI,SAAS,MAAM,qBAAO,yBAAyB,UAAU;AAAA,MAC3D,OAAO;AAAA,QACL,MAAM,MAAM;AAAA,MACd;AAAA,IACF,CAAC;AAED,QAAI,CAAC,QAAQ;AACX,eAAS,MAAM,qBAAO,yBAAyB,OAAO;AAAA,QACpD,MAAM;AAAA,UACJ,MAAM,MAAM;AAAA,UACZ,GAAG;AAAA,UACH,GAAG;AAAA,UACH,SAAS;AAAA,UACT,iBAAiB;AAAA,UACjB,WAAW;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT,CAAC;AAAA,EACH,gBAAgB,kCACb;AAAA,IACC,EAAE,OAAO;AAAA,MACP,IAAI,EAAE,OAAO,EAAE,KAAK;AAAA,MACpB,iBAAiB,EAAE,OAAO,EAAE,KAAK;AAAA,MACjC,GAAG,EAAE,OAAO;AAAA,MACZ,GAAG,EAAE,OAAO;AAAA,MACZ,SAAS,EAAE,OAAO;AAAA,MAClB,iBAAiB,EAAE,OAAO;AAAA,MAC1B,WAAW,EAAE,OAAO;AAAA,IACtB,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,UAAM,SAAS,MAAM,qBAAO,yBAAyB,OAAO;AAAA,MAC1D,OAAO;AAAA,QACL,IAAI,MAAM;AAAA,MACZ;AAAA,MACA,MAAM;AAAA,QACJ,GAAG,MAAM;AAAA,QACT,GAAG,MAAM;AAAA,QACT,SAAS,MAAM;AAAA,QACf,iBAAiB,MAAM;AAAA,QACvB,WAAW,MAAM;AAAA,MACnB;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT,CAAC;AAAA,EACH,aAAa,kCACV;AAAA,IACC,EAAE,OAAO;AAAA,MACP,UAAU,EAAE,OAAO;AAAA,MACnB,UAAU,EAAE,OAAO;AAAA,MACnB,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,MAC1B,WAAW,EAAE,OAAO;AAAA,MACpB,cAAc,EAAE,OAAO;AAAA;AAAA,MAEvB,QAAQ,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMnB,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,UAAM,SAAS,MAAM;AACrB,eAAO,qCAAgB;AAAA,MACrB,QAAQ,MAAM;AAAA,MACd,UAAU,MAAM;AAAA,MAChB,UAAU,MAAM;AAAA,MAChB,WAAW,MAAM;AAAA,MACjB,cAAc,MAAM;AAAA,MACpB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAAA,EACH,eAAe,kCACZ;AAAA,IACC,EAAE,OAAO;AAAA;AAAA,MAEP,IAAI,EAAE,OAAO;AAAA,MACb,iBAAiB,EAAE,OAAO,EAAE,KAAK;AAAA,IACnC,CAAC;AAAA,EACH,EACC,SAAS,OAAO,EAAE,KAAK,MAAM,MAAM;AAClC,eAAO,uCAAkB,MAAM,EAAE;AAAA,EACnC,CAAC;AACL,CAAC;",
  "names": ["import_integration"]
}
